
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vasu
 */
public class YoutubeSearch extends javax.swing.JFrame {
String title;
    /**
     * Creates new form YoutubeSearch
     */
    public YoutubeSearch() {
        initComponents();
        getContentPane().setBackground(java.awt.Color.PINK);
        int h = Toolkit.getDefaultToolkit().getScreenSize().height;
        int w = Toolkit.getDefaultToolkit().getScreenSize().width;
        this.setSize(w, h);
    }
        public YoutubeSearch(String title) {
        initComponents();
        this.title = title;
        int h = Toolkit.getDefaultToolkit().getScreenSize().height;
        int w = Toolkit.getDefaultToolkit().getScreenSize().width;
        this.setSize(w, h);
        
            setVisible(true);
        youtube1 ob = new youtube1();
        new Thread(ob).start();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        youtubePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        youtubePanel.setBackground(new java.awt.Color(255, 204, 204));
        youtubePanel.setLayout(null);
        jScrollPane1.setViewportView(youtubePanel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(6, 55, 1230, 860);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Searched results...");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 6, 510, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YoutubeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YoutubeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YoutubeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YoutubeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YoutubeSearch().setVisible(true);
            }
        });
    }

    class youtube1 implements Runnable {

        String query = title;
            
        public void run() {
            try {
                query = query.replaceAll(" ","%20");
                URL urlYoutube = new URL("https://www.googleapis.com/youtube/v3/search?part=snippet&maxResult=30&q=" + query + "&key=AIzaSyC8qrN-rvVoUpXALxQMXxSF70559TQEBYc");
                URLConnection conn = urlYoutube.openConnection();
                conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; en-US) AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.0 Safari/532.5");
                InputStream stream = conn.getInputStream();
                BufferedReader br = new BufferedReader(new InputStreamReader(stream));
                String s = "";
                while (true) {
                    String sub = br.readLine();
                    if (sub == null) {
                        break;
                    }
                    s += sub;
                }
//                System.out.println(s);
                JSONParser jsonParser = new JSONParser();
                JSONObject js = (JSONObject) jsonParser.parse(s);
                System.out.println(js);
                JSONArray jsa = (JSONArray) js.get("items");

                int x = 10, y = 20;

                singlePanelYoutube spy[] = new singlePanelYoutube[(int) jsa.size()];
                youtubePanel.setPreferredSize(new Dimension(600, 5000));

                for (int i = 0; i < jsa.size(); i++) {
                    JSONObject js1 = (JSONObject) jsa.get(i);
                    JSONObject obj_id = (JSONObject) js1.get("id");
                    String videoId = (String) obj_id.get("videoId");

                    JSONObject snippet = (JSONObject) js1.get("snippet");
                    String title = (String) snippet.get("title");
                    String description = (String) snippet.get("description");

                    spy[i] = new singlePanelYoutube();
                    spy[i].setBounds(x, y, 800, 250);
                    spy[i].titleYoutube.setText("<html>" + title + "</html>");
                    spy[i].decriptionYoutube.setText("<html>" + description + "</html>");

                    URL urlimg1 = new URL("https://i.ytimg.com/vi/" + videoId + "/mqdefault.jpg");
                    URLConnection urlcon1 = urlimg1.openConnection();
                    urlcon1.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36");
                    BufferedImage img = ImageIO.read(urlcon1.getInputStream());
                    BufferedImage img1 = resize(img, 240, 240);
                    ImageIcon imc = new ImageIcon(img1);
                    spy[i].thumbnailYoutube.setIcon(imc);

                    spy[i].addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            if (e.getClickCount() == 2) {

                                YoutubeBrowse browse = new YoutubeBrowse(title, description, videoId);
                                browse.setVisible(true);
                            }
                        }

                    });
                    System.out.println(videoId);
                    System.out.println(title);
                    System.out.println(description);
                    System.out.println("\n\n");

                    youtubePanel.add(spy[i]);
                    youtubePanel.repaint();

                    y = y + 300;

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        System.out.println(bi);
        return bi;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel youtubePanel;
    // End of variables declaration//GEN-END:variables
}
